# Default values for webapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: xcoulon/go-url-shortener
  tag: 0.1.0
  pullPolicy: IfNotPresent

nameOverride: "go-url-shortener"
fullnameOverride: "go-url-shortener"
postgreshost: "webapp-postgresql-ha-pgpool"
postgresdb: "url_shortener_db"
postgresuser: "postgres"
postgrespass: "testpass"
service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations: 
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: "/"
  hosts:
    - host: testapp.nprd.alefed.com
      paths: ["/"]

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}


#Values for Postgresql-ha

## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##
postgresql-ha:
  global:
    postgresql:
      username: postgres
      password: testpass
      database: url_shortener_db
      repmgrUsername: repmgruser
      repmgrPassword: repmgrpassword

  postgresqlImage:
    registry: docker.io
    repository: bitnami/postgresql-repmgr
    tag: 11.7.0-debian-10-r64
    pullPolicy: IfNotPresent
    debug: true

  pgpoolImage:
    registry: docker.io
    repository: bitnami/pgpool
    tag: 4.1.1-debian-10-r44
    pullPolicy: IfNotPresent
    debug: false

  volumePermissionsImage:
    registry: docker.io
    repository: bitnami/minideb
    tag: buster
    pullPolicy: Always


  ## Kubernetes Cluster Domain
  ##
  clusterDomain: cluster.local

  ## PostgreSQL parameters
  ##
  postgresql:
    ## Number of replicas to deploy
    ##
    replicaCount: 2

    ## Update strategy for PostgreSQL statefulset
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
    ##
    updateStrategyType: RollingUpdate

    ## K8s Security Context
    ## https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    ##
    securityContext:
      enabled: true
      fsGroup: 1001
      runAsUser: 1001

    ## PostgreSQL containers' resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits:
        cpu: 500m
        memory: 500Mi
      requests:
        cpu: 250m
        memory: 256Mi

    ## PostgreSQL container's liveness and readiness probes
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 6
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 6

    ## Pod disruption budget configuration
    ##
    pdb:
      ## Specifies whether a Pod disruption budget should be created
      ##
      create: true
      minAvailable: 1
      # maxUnavailable: 1

    ## PostgreSQL configuration parameters
    ##
    username: postgres
    password: testpass
    database: url_shortener_db

    ## Upgrade repmgr extension in the database
    ##
    upgradeRepmgrExtension: false

    ## Configures pg_hba.conf to trust every user
    ##
    pgHbaTrustAll: false

    ## Repmgr configuration parameters
    ##
    repmgrUsername: repmgr
    repmgrPassword: repmgrpassword
    repmgrDatabase: repmgr
    repmgrLogLevel: NOTICE
    repmgrConnectTimeout: 5
    repmgrReconnectAttempts: 3
    repmgrReconnectInterval: 5

  ## Pgpool parameters
  ##
  pgpool:
    ## Number of replicas to deploy
    ##
    replicaCount: 2

    ## Additional pod annotations
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}

    ## Affinity for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ##
    affinity: {}

    ## Node labels for pod assignment. Evaluated as a template.
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}

    ## Pod priority class
    ## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
    ##
    priorityClassName: ""

    ## Tolerations for pod assignment. Evaluated as a template.
    ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: {}

    ## K8s Security Context
    ## https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    ##
    securityContext:
      enabled: true
      fsGroup: 1001
      runAsUser: 1001

    ## Pgpool containers' resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits: {}
      #   cpu: 250m
      #   memory: 256Mi
      requests: {}
      #   cpu: 250m
      #   memory: 256Mi

    ## Pgpool container's liveness and readiness probes
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5

    ## Pod disruption budget configuration
    ##
    pdb:
      ## Specifies whether a Pod disruption budget should be created
      ##
      create: true
      minAvailable: 1
      # maxUnavailable: 1

    ## Pgpool configuration parameters
    ##
    adminUsername: admin
    # adminPassword:

    ## Pgpool configuration
    ## Specify content for pgpool.conf
    ## Alternatively, you can put your pgpool.conf under the files/ directory
    ## ref: https://github.com/bitnami/bitnami-docker-pgpool#configuration-file
    ##
    # configuration:

    ## ConfigMap with Pgpool configuration
    ## NOTE: This will override pgpool.configuration parameter
    ##
    # configurationCM:

    ## initdb scripts
    ## Specify dictionary of scripts to be run everytime Pgpool container is initialized
    ## Alternatively, you can put your scripts under the files/pgpool-entrypoint-initdb.d directory
    ##
    # initdbScripts:
    #   my_init_script.sh: |
    #      #!/bin/sh
    #      echo "Do something."

    ## ConfigMap with scripts to be run everytime Pgpool container is initialized
    ## NOTE: This will override pgpool.initdbScripts
    ##
    # initdbScriptsCM:

    ## Use Pgpool Load-Balancing
    ##
    useLoadBalancing: true
  ## Init Container paramaters
  ##
  volumePermissions:
    enabled: false
    ## K8s Security Context
    ## https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    ##
    securityContext:
      runAsUser: 0
    ## Init container' resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits: {}
      #   cpu: 100m
      #   memory: 128Mi
      requests: {}
      #   cpu: 100m
      #   memory: 128Mi

  ## Enable this if you're using Prometheus Operator
  ##
  serviceMonitor:
    enabled: false
    ## Specify a namespace if needed
    # namespace: monitoring
    # fallback to the prometheus default unless specified
    # interval: 10s
    # scrapeTimeout: 10s
    ## Defaults to what's used if you follow CoreOS [Prometheus Install Instructions](https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#tldr)
    ## [Prometheus Selector Label](https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-operator-1)
    ## [Kube Prometheus Selector Label](https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#exporters)
    selector:
      prometheus: kube-prometheus

    ## Persistence paramaters
    ##
  persistence:
    enabled: true
    ## A manually managed Persistent Volume and Claim
    ## If defined, PVC must be created manually before volume will be bound
    ## The value is evaluated as a template
    ##
    # existingClaim:
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ## set, choosing the default provisioner.
    ##
    ##   storageClass: "1a"
    ## The path the volume will be mounted at, useful when using different
    ## PostgreSQL images.
    ##
    mountPath: /bitnami/postgresql
    ## Persistent Volume Access Mode
    ##
    accessModes:
      - ReadWriteOnce
    ## Persistent Volume Claim size
    ##
    size: 8Gi
    ## Persistent Volume Claim annotations
    ##
    annotations: {}
  
  ## PgPool service paramaters
  ##
  service:
    ## Service type
    ##
    type: ClusterIP
    ## Service Port
    ##
    port: 5432
    ## Specify the nodePort value for the LoadBalancer and NodePort service types.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    # nodePort:
    ## Set the LoadBalancer service type to internal only.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    # loadBalancerIP:
    ## Load Balancer sources
    ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ##
    # loadBalancerSourceRanges:
    # - 10.10.10.0/24
    ## Set the Cluster IP to use
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#choosing-your-own-ip-address
    ##
    # clusterIP: None
    ## Provide any additional annotations which may be required
    ##
    annotations: {}
  
  ## Ingress paramaters
  ##
  ingress:
    ## Set to true to enable ingress record generation
    enabled: false
  
    ## Set this to true in order to add the corresponding annotations for cert-manager
    certManager: false
  
    ## Ingress annotations done as key:value pairs
    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/annotations.md
    ##
    ## If tls is set to true, annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
    ## If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
    annotations: {}
    #  kubernetes.io/ingress.class: nginx
  
    ## The list of hostnames to be covered with this ingress record.
    ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
    hosts:
      - name: postgresql.local
        path: /
  
    ## The tls configuration for the ingress
    ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    #tls:
    #  - hosts:
    #      - postgresql.local
    #    secretName: postgresql.local-tls
  
    secrets:
    ## If you're providing your own certificates, please use this to add the certificates as secrets
    ## key and certificate should start with -----BEGIN CERTIFICATE----- or
    ## -----BEGIN RSA PRIVATE KEY-----
    ##
    ## name should line up with a tlsSecret set further up
    ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
    ##
    ## It is also possible to create and manage the certificates outside of this helm chart
    ## Please see README.md for more information
    # - name: airflow.local-tls
    #   key:
    #   certificate:
  
  ## NetworkPolicy paramaters
  ##
  #networkPolicy:
  #  enabled: true
  
    ## The Policy model to apply. When set to false, only pods with the correct
    ## client labels will have network access to the port PostgreSQL is listening
    ## on. When true, PostgreSQL will accept connections from any source
    ## (with the correct destination port).
    ##
  #  allowExternal: false
